<style lang="less">
    @import "../../style/base.less";
    .userinfo {
        display: flex;
        flex-direction: row;
        align-items: center;
    }

    .userinfo-avatar {
        width: 80rpx;
        height: 80rpx;
        border-radius: 50%;
    }

    .userinfo-nickname {
        margin-left: @jianju15;
    }
    .tags{
        display: flex;
        flex-direction: row;
        align-items: center;
        view{
            border: 1px solid #ccc;
            border-radius: 5rpx;
            padding: 5rpx 15rpx;
            margin-right: 10rpx;
            &.title{
                border-width: 0;
            }
        }
    }
    .llgo{
        form.activity{
            .section{
                margin: 20rpx 0;
            }
            input{
                border: 1px solid #fff;
                background: #fff;
                text-indent: 20rpx;
                padding: 15rpx 0;
            }
            picker{
                border: 1px solid #fff;
                background: #fff;
                text-indent: 20rpx;
                color: @color-blue;
                padding: 20rpx 0;
            }
            checkbox-group{
                margin-left: 20rpx;
                label{
                    margin: 8rpx 10rpx;
                }
            }
            slider{
                margin: 20rpx 50rpx;
            }
        }
    }
</style>
<template>
    <view class="llgo">
        <form bindsubmit="formSubmit" class="activity">
            <view class="section">
                <input name="slogan" placeholder="标语，如周末吃些好的" />
            </view>
            <view class="section">
                <input name="region" placeholder="请输入小区名称" />
            </view>
            <view class="section">
                <input name="goto" placeholder="去往市场名称" />
            </view>
            <view class="section flex-line">
                <view  style="width: 50%;">
                    <picker name="stime" mode="stime" value="{{stime}}" start="00:00" end="23:59">
                        <view class="picker">
                            出发时间:{{stime}}<icon type="waiting" size="15" color="orange"/>
                        </view>
                    </picker>
                </view>
                <view  style="width: 50%;">
                    <picker name="etime" mode="etime" value="{{etime}}" start="00:00" end="23:59">
                        <view class="picker">
                            返回时间:{{etime}}<icon type="waiting" size="15" color="orange"/>
                        </view>
                    </picker>
                </view>
            </view>
            <view class="section">
                <view>配送方式</view>
                <checkbox-group bindchange="distributionChange" name="distribution">
                    <label class="checkbox" wx:for="{{['楼下自提','送货到家','来我家取']}}" wx:for-key="key">
                        <checkbox value="{{item}}"/>{{item}}
                    </label>
                </checkbox-group>
            </view>
            <view class="section">
                <view>购买类型</view>
                <checkbox-group name="types">
                    <label class="checkbox" wx:for="{{['蔬菜','水果','肉蛋','水产']}}" wx:for-key="key">
                        <checkbox value="{{item}}"/>{{item}}
                    </label>
                </checkbox-group>
            </view>
            <view class="section">
                <view >佣金</view>
                <view class="flex-line">
                    <view style="width: 90%">
                        <slider name="commission"  min="1" max="10" show-value/>
                    </view>
                    <view style="margin-top: 15rpx">元</view>
                </view>
            </view>
            <view class="btn-area">
                <button formType="submit">创建</button>
            </view>
        </form>

    </view>
</template>
<script>
    import wepy from 'wepy'
    import URI from '../../util/uri'
    export default class Info extends wepy.page {
        config = {
            navigationBarTitleText: '采购信息'
        }
        data = {
            location:{},
            stime:'06:00',
            etime:'08:00',
        }
        onLoad() {
//            let self = this
//            this.$parent.getUserInfo(function (userInfo) {
//                if (userInfo) {
//                    self.userInfo = userInfo
//                }
//                self.$apply()
//            })
            this.getLocation();

        }
        getLocation(){
            let that = this
            wx.getLocation({
                type: 'wgs84',
                success: function(res) {
                    console.log('getLocation',res);
                    that.location=res;
                    that.$apply();
                },
                fail:function (res) {
                    console.log('getLocation-catch',res);
                    that.$parent.authSetting().then(function () {
                        that.getLocation();
                    });
                }
            })

        }
        onShareAppMessage() {
            return {
                //title: '自定义转发标题',
                //path: '/page/user?id=123',
                success: function(res) {
                    // 转发成功
                },
                fail: function(res) {
                    // 转发失败
                }
            }
        }
        async tapJoin(){
            //await this.$parent.checkLoginState();
            wepy.navigateTo({
                url: '../address'
            })
        }
        async setPhoneNumber(res){
            console.log(res);
            if(res.detail.errMsg="getPhoneNumber:ok"){
                let params={
                    url:URI.setPhoneNumber, //自己服务器维护用户登录状态地址
                    data:res.detail,
                }
                wepy.request(params);
            }
        }
        async chooseAddress(){
            let that=this;
            wepy.chooseAddress().then(function(res){
                console.log('chooseAddress',res);
            }).catch(function(){
                wepy.showModal({
                    title: '授权提示',
                    content: '为方便使用，请授权小程序访问用户信息、地址信息以及电话',
                }).then(function () {
                    wepy.openSetting().then(function (res) {
                        console.log('wepy.openSetting',res);
                        res.authSetting.forEach(scope => {
                            if(scope==false){
                                wepy.showToast({
                                    title: '未授权，无法使用',
                                    icon: 'none',
                                    duration: 5000
                                })
                            }
                        })
                    });
                }).catch(function () {
                    wepy.showToast({
                        title: '未授权，无法继续',
                        icon: 'none',
                        duration: 5000
                    })
                });
            })
        }
        methods = {
            handlerGetPhone(res){
                this.setPhoneNumber();
            },
            handlerNewActivity(){
                this.setPhoneNumber();
                wepy.navigateTo({
                    url: './new'
                })
            },
            distributionChange(e){
                console.log('distributionChange：', e.detail.value)
            },
            formSubmit(e){
                console.log('formSubmit：', e.detail.value)
            }
        }
    }

</script>
