<style lang="less">
    .weui-navbar{
        border-width:0;
    }
    .weui-navbar__item{
        border-radius: 5px;
        border: 1px solid #fff;
        margin-bottom: 10px;
        padding: 10px 5px;
        background-color: #fff;
    }
    .weui-bar__item_on{
        background-color: rgb(255, 87, 10);
        border-color: rgb(255, 87, 10);
        color:#fff;
        .weui-navbar__title{
            color:#fff;

        }
    }
    .weui-bar__item_checked{
        background-color: rgb(255, 87, 10);
        .weui-grid__label{
            color: #fff;
        }
    }
    .checkNum{
        padding: 0px;
        border-radius: 10px;
        width: 20px;
        height: 20px;
        overflow: hidden;
        display: inline-block;
        line-height: 20px;
        position: absolute;
        top:-10px;
        right:-10px;
    }
    .weui-grid{
        padding: 5px;
    }
    .weui-grid__icon{
        width: 100%;
        height: 75px;
    }
</style>
<template>
    <view class="page" xmlns:wx="http://www.w3.org/1999/xhtml">
        <view class="page__bd" style="padding: 5px;">
            <view class="weui-tab" style="display: flex; flex-direction: row; position: relative;">
                <view class="weui-navbar" style="display: block;width:170rpx;min-width:170rpx;position: relative; padding-top: 10px;padding-right: 20px;height: {{footDataHeight}}px; overflow-y: auto;">
                    <block wx:for="{{footData.tabs}}" wx:key="footData-tabs-key">
                        <view id="{{index}}" class="weui-navbar__item {{activeIndex == index ? 'weui-bar__item_on' : ''}}" bindtap="tabClick">
                            <view class="weui-navbar__title">
                                {{item.name}}
                                <text class="bg-color-red color-white checkNum"
                                      wx:if="{{item.checkNum>0}}">{{item.checkNum}}</text>
                            </view>
                        </view>
                    </block>
                </view>
                <view class="weui-tab__panel" style="position: relative; padding-top: 0rpx; height: {{footDataHeight}}px; overflow-y: auto;">
                    <!--
                    <view class="weui-tab__content"
                          hidden="{{activeIndex != fi}}" wx:for="{{footData.list}}"
                          wx:key="footData-list-key" wx:for-index="fi">
                        <button wx:for="{{item}}" wx:key="footData-list-item-key"
                                style="display: inline-block;margin-right: 8px;width: 70px; overflow: hidden; padding: 0; white-space : nowrap"
                                class="{{item.checked ? 'weui-bar__item_on' : ''}}"
                                bindtap="checkedClick" data-index="{{index}}">
                            {{item.name}}
                        </button>
                    </view>
                    -->
                    <view class="weui-grids" hidden="{{activeIndex != fi}}" wx:for="{{footData.list}}"
                          wx:key="footData-list-key" wx:for-index="fi">
                        <block wx:for="{{item}}" wx:key="footData-list-item-key">
                            <view  class="weui-grid {{checkedItemsWeightUnit[item.name] ? 'weui-bar__item_checked' : ''}}"
                                   bindtap="checkedClick" data-index="{{index}}">
                                <image class="weui-grid__icon" src="http://009-img.vking.wang/category/{{item.name}}.jpg" />
                                <view class="weui-grid__label">{{item.name}}</view>
                            </view>
                        </block>
                    </view>
                </view>
            </view>
            <button type="primary" @tap="submit" disabled="{{!(checkNum>0)}}">选 好 了</button>
        </view>
        <weight></weight>
    </view>
    <footer></footer>

</template>
<script>
    import wepy from 'wepy'
    import URI from '../../util/uri'
    import footer from '../../components/footer';
    import weight from '../../components/weight';
    import daa from '../data'
    export default class PurchaseCategory extends wepy.page {
        config = {
            navigationBarTitleText: '选购果蔬'
        }
        components = {
            footer: footer,
            weight:weight,
        }
        data = {
            activeIndex: 0,
            footData:{},
            footDataHeight:0,
            checkNum:0,
            checkedItemsWeightUnit:{},
            act_id:0,
            order_id:0,
        }
        onLoad(option) {
            this.getFootData();
            console.log('create-onLoad',option);
            this.act_id=option.act_id;
            this.order_id=option.order_id;
            var that = this;
            wx.getSystemInfo({
                success: function(res) {
                    console.log('getSystemInfo',res);
                    that.footDataHeight=res.windowHeight-100;
                    that.$apply();
                }
            });
            this.userInfo=this.$parent.globalData.userInfo;
            this.hasPhone=this.$parent.globalData.phone;
            if(typeof option.share_openid!='undefined'){
                wepy.setStorage({
                    key:'share_openid',
                    data:option.share_openid
                });
            }
        }
        onShow(){
            console.log('create-onShow');
            if(!this.userInfo){
                this.$parent.getStorageInit();
                this.hasPhone=this.$parent.globalData.phone;
                this.userInfo=this.$parent.globalData.userInfo;
            }

        }

        methods = {
            tabClick: function (e) {
                this.sliderOffset=e.currentTarget.offsetLeft;
                this.activeIndex=e.currentTarget.id;
                this.$apply();
            },
            checkedClick(e){
                let index=e.currentTarget.dataset.index;
                this.$invoke('weight','showWeightDialog',{
                    name:this.footData.list[this.activeIndex][index].name,
                    activeIndex:this.activeIndex
                });
            },
            submit(){
                let items=wepy.getStorageSync('checked-items-weight-unit') || {};
                console.log('submit',items);
                let params={
                    url:URI.purchaseMyOrderBatchSet,
                    data:{
                        act_id:this.act_id,
                        order_id:this.order_id,
                        items:items
                    }
                }
                wepy.request(params).then((res) =>{
                    wepy.navigateBack({
                        delta: 1
                    })
                });
            }
        }
        async getFootData(){
            let params={
                url:URI.category,
            }
            wepy.request(params).then((footData) =>{
                this.footData=footData;
                this.initPurchaseMyOrderCache();
                this.checkedItemsDisplay();
                this.$apply();
            });
        }
        initPurchaseMyOrderCache(){
            let res=wepy.getStorageSync('purchaseMyOrder');
            let data={};
            if(res.orders){
                if(res.orders.length>0){
                    if(res.orders[0].items.length>0){
                        let items=res.orders[0].items;
                        items.forEach(item=>{
                            data[item.name]={
                                unitIndex: daa.units.indexOf(item.weight_unit),
                                weight_unit: item.weight_unit,
                                weight:item.weight/10,
                                name:item.name,
                            };
                        })
                    }
                }
            }
            wepy.setStorageSync('checked-items-weight-unit',data);
        }
        checkedItemsDisplay(checked){
            let data=wepy.getStorageSync('checked-items-weight-unit') || {};
            this.checkedItemsWeightUnit=data;
            let checkNum=0;
            this.footData.tabs.forEach((tab,tab_i)=>{
                this.footData.tabs[tab_i].checkNum=0;
                this.footData.list[tab_i].forEach((item,item_i)=>{
                    console.log('checked-items-weight-unit',item.name,data[item.name]);
                    if(data[item.name]){
                        this.footData.tabs[tab_i].checkNum+=1;
                        checkNum++;
                    }
                })
            })
            this.checkNum=checkNum;
            this.$apply();
        }
    }
</script>